[{"F:\\FullStack\\React\\ReactProject\\KAPS\\online-examination-system\\src\\index.js":"1","F:\\FullStack\\React\\ReactProject\\KAPS\\online-examination-system\\src\\reportWebVitals.js":"2","F:\\FullStack\\React\\ReactProject\\KAPS\\online-examination-system\\src\\App.js":"3","F:\\FullStack\\React\\ReactProject\\KAPS\\online-examination-system\\src\\components\\Navbar.js":"4","F:\\FullStack\\React\\ReactProject\\KAPS\\online-examination-system\\src\\components\\pages\\Footer.js":"5","F:\\FullStack\\React\\ReactProject\\KAPS\\online-examination-system\\src\\components\\ScrollToTop.js":"6","F:\\FullStack\\React\\ReactProject\\KAPS\\online-examination-system\\src\\components\\pages\\Pricing.js":"7","F:\\FullStack\\React\\ReactProject\\KAPS\\online-examination-system\\src\\components\\pages\\Notfound.js":"8","F:\\FullStack\\React\\ReactProject\\KAPS\\online-examination-system\\src\\components\\pages\\ContactUs.js":"9","F:\\FullStack\\React\\ReactProject\\KAPS\\online-examination-system\\src\\components\\pages\\Home.js":"10","F:\\FullStack\\React\\ReactProject\\KAPS\\online-examination-system\\src\\components\\pages\\Features.js":"11","F:\\FullStack\\React\\ReactProject\\KAPS\\online-examination-system\\src\\components\\pages\\Services.js":"12","F:\\FullStack\\React\\ReactProject\\KAPS\\online-examination-system\\src\\components\\pages\\Admin\\Adm_login.js":"13","F:\\FullStack\\React\\ReactProject\\KAPS\\online-examination-system\\src\\components\\pages\\Admin\\AdminMain.js":"14","F:\\FullStack\\React\\ReactProject\\KAPS\\online-examination-system\\src\\components\\pages\\Admin\\UserMgt.js":"15","F:\\FullStack\\React\\ReactProject\\KAPS\\online-examination-system\\src\\components\\pages\\Admin\\Adm_Registration.js":"16","F:\\FullStack\\React\\ReactProject\\KAPS\\online-examination-system\\src\\components\\pages\\Admin\\AddSubjects.js":"17","F:\\FullStack\\React\\ReactProject\\KAPS\\online-examination-system\\src\\components\\pages\\Admin\\DisplayQuestions.js":"18","F:\\FullStack\\React\\ReactProject\\KAPS\\online-examination-system\\src\\components\\pages\\Admin\\QuestionEdit.js":"19","F:\\FullStack\\React\\ReactProject\\KAPS\\online-examination-system\\src\\components\\pages\\Student\\Stud_login.js":"20","F:\\FullStack\\React\\ReactProject\\KAPS\\online-examination-system\\src\\components\\pages\\Student\\TestSelection.js":"21","F:\\FullStack\\React\\ReactProject\\KAPS\\online-examination-system\\src\\components\\pages\\Student\\Stud_Registration.js":"22","F:\\FullStack\\React\\ReactProject\\KAPS\\online-examination-system\\src\\components\\pages\\Student\\Instructions.js":"23","F:\\FullStack\\React\\ReactProject\\KAPS\\online-examination-system\\src\\components\\pages\\Student\\ExamPage.js":"24","F:\\FullStack\\React\\ReactProject\\KAPS\\online-examination-system\\src\\components\\pages\\Student\\Results.js":"25","F:\\FullStack\\React\\ReactProject\\KAPS\\online-examination-system\\src\\components\\pages\\Student\\QuestionButtons.js":"26","F:\\FullStack\\React\\ReactProject\\KAPS\\online-examination-system\\src\\components\\pages\\Student\\Timer.js":"27","F:\\FullStack\\React\\ReactProject\\KAPS\\online-examination-system\\src\\Quiz.js":"28","F:\\FullStack\\React\\ReactProject\\KAPS\\online-examination-system\\src\\components\\pages\\Student\\QuestionBox.js":"29","F:\\FullStack\\React\\ReactProject\\KAPS\\online-examination-system\\src\\components\\pages\\Student\\fire.js":"30","F:\\FullStack\\React\\ReactProject\\KAPS\\online-examination-system\\src\\components\\pages\\Student\\AllOptions.js":"31"},{"size":290,"mtime":1609488850000,"results":"32","hashOfConfig":"33"},{"size":362,"mtime":499072500000,"results":"34","hashOfConfig":"33"},{"size":2960,"mtime":1610518375895,"results":"35","hashOfConfig":"33"},{"size":3417,"mtime":1609721586000,"results":"36","hashOfConfig":"33"},{"size":3900,"mtime":1610539970013,"results":"37","hashOfConfig":"33"},{"size":256,"mtime":1609568620000,"results":"38","hashOfConfig":"33"},{"size":2794,"mtime":1609686822000,"results":"39","hashOfConfig":"33"},{"size":484,"mtime":1610557020339,"results":"40","hashOfConfig":"33"},{"size":7955,"mtime":1610530145910,"results":"41","hashOfConfig":"33"},{"size":6101,"mtime":1610526789970,"results":"42","hashOfConfig":"33"},{"size":4503,"mtime":1609735518000,"results":"43","hashOfConfig":"33"},{"size":2879,"mtime":1609731790000,"results":"44","hashOfConfig":"33"},{"size":5930,"mtime":1610427204000,"results":"45","hashOfConfig":"33"},{"size":1580,"mtime":1610514876650,"results":"46","hashOfConfig":"33"},{"size":7622,"mtime":1610528884927,"results":"47","hashOfConfig":"33"},{"size":10555,"mtime":1610539722499,"results":"48","hashOfConfig":"33"},{"size":3975,"mtime":1610558101722,"results":"49","hashOfConfig":"33"},{"size":397,"mtime":1609908632000,"results":"50","hashOfConfig":"33"},{"size":9512,"mtime":1610558187046,"results":"51","hashOfConfig":"33"},{"size":5540,"mtime":1610409190000,"results":"52","hashOfConfig":"33"},{"size":2191,"mtime":1610557993742,"results":"53","hashOfConfig":"33"},{"size":10693,"mtime":1610427558000,"results":"54","hashOfConfig":"33"},{"size":2048,"mtime":1610539876016,"results":"55","hashOfConfig":"33"},{"size":4859,"mtime":1610535160381,"results":"56","hashOfConfig":"33"},{"size":1376,"mtime":1610422216000,"results":"57","hashOfConfig":"33"},{"size":503,"mtime":1609988740000,"results":"58","hashOfConfig":"33"},{"size":556,"mtime":1610517393689,"results":"59","hashOfConfig":"33"},{"size":1298,"mtime":1609874732000,"results":"60","hashOfConfig":"33"},{"size":2069,"mtime":1610415324000,"results":"61","hashOfConfig":"33"},{"size":3215,"mtime":1610422310000,"results":"62","hashOfConfig":"33"},{"size":4909,"mtime":1610414676000,"results":"63","hashOfConfig":"33"},{"filePath":"64","messages":"65","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"66"},"irnw38",{"filePath":"67","messages":"68","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"66"},{"filePath":"69","messages":"70","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"66"},{"filePath":"71","messages":"72","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"73","usedDeprecatedRules":"66"},{"filePath":"74","messages":"75","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"66"},{"filePath":"76","messages":"77","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"66"},{"filePath":"78","messages":"79","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"66"},{"filePath":"80","messages":"81","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"82","messages":"83","errorCount":0,"warningCount":9,"fixableErrorCount":0,"fixableWarningCount":0,"source":"84","usedDeprecatedRules":"66"},{"filePath":"85","messages":"86","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"66"},{"filePath":"87","messages":"88","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"89","usedDeprecatedRules":"66"},{"filePath":"90","messages":"91","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"92","usedDeprecatedRules":"66"},{"filePath":"93","messages":"94","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"95","usedDeprecatedRules":"66"},{"filePath":"96","messages":"97","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"66"},{"filePath":"98","messages":"99","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"100","usedDeprecatedRules":"66"},{"filePath":"101","messages":"102","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"103","usedDeprecatedRules":"66"},{"filePath":"104","messages":"105","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"106","messages":"107","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"108","usedDeprecatedRules":"66"},{"filePath":"109","messages":"110","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"111","messages":"112","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"113","usedDeprecatedRules":"66"},{"filePath":"114","messages":"115","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"116","messages":"117","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"66"},{"filePath":"118","messages":"119","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"66"},{"filePath":"120","messages":"121","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"122","usedDeprecatedRules":"66"},{"filePath":"123","messages":"124","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"66"},{"filePath":"125","messages":"126","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"66"},{"filePath":"127","messages":"128","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"66"},{"filePath":"129","messages":"130","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"66"},{"filePath":"131","messages":"132","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"133","usedDeprecatedRules":"66"},{"filePath":"134","messages":"135","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"136","usedDeprecatedRules":"66"},{"filePath":"137","messages":"138","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":"139","usedDeprecatedRules":"66"},"F:\\FullStack\\React\\ReactProject\\KAPS\\online-examination-system\\src\\index.js",[],["140","141"],"F:\\FullStack\\React\\ReactProject\\KAPS\\online-examination-system\\src\\reportWebVitals.js",[],"F:\\FullStack\\React\\ReactProject\\KAPS\\online-examination-system\\src\\App.js",[],"F:\\FullStack\\React\\ReactProject\\KAPS\\online-examination-system\\src\\components\\Navbar.js",["142","143"],"import React,{useState,useEffect} from 'react'\r\nimport { Link } from \"react-router-dom\";\r\nimport {MdDashboard} from 'react-icons/md'\r\nimport {FaBars,FaTimes} from 'react-icons/fa'\r\nimport './Navbar.css';\r\nimport { IconContext } from 'react-icons/lib';\r\nfunction Navbar() {\r\n    const [click,setClick]= useState(false)\r\n\r\n    const handleClick=()=> setClick(!click)\r\n    const closeMobileMenu=()=> setClick(false)\r\n\r\n    return (\r\n        <>\r\n        <IconContext.Provider value={{color:'#fff'}}>\r\n        <div className=\"navbar\">\r\n            <div className=\"navbar-container container\">\r\n            <Link to='/' className=\"navbar-logo\" onClick={closeMobileMenu}>\r\n                <MdDashboard className=\"navbar-icon\"></MdDashboard>\r\n                KAPS\r\n            </Link>\r\n            <div className=\"menu-icon\" onClick={handleClick}>\r\n              {click ? <FaTimes/>:<FaBars/>}  \r\n            </div>\r\n            <ul className={click ? 'nav-menu active':'nav-menu'}>\r\n                <li className=\"nav-item\">\r\n                <Link to=\"/\" className=\"nav-links\" onClick={closeMobileMenu}>\r\n                    Home\r\n                </Link>\r\n                </li>\r\n                <li className=\"nav-item\">\r\n                <Link to=\"/features\" className=\"nav-links\" onClick={closeMobileMenu}>\r\n                Features\r\n                </Link>\r\n                </li>\r\n                <li className=\"nav-item\">\r\n                <Link to=\"/services\" className=\"nav-links\" onClick={closeMobileMenu}>\r\n                Services\r\n                </Link>\r\n                </li>\r\n                <li className=\"nav-item\">\r\n                <Link to=\"/pricing\" className=\"nav-links\" onClick={closeMobileMenu}>\r\n                    Pricing\r\n                </Link>\r\n                </li>\r\n                <li className=\"nav-item\">\r\n                <Link to=\"/ContactUs\" className=\"nav-links\" onClick={closeMobileMenu}>\r\n                ContactUs\r\n                </Link>\r\n                </li>\r\n               \r\n                <li class=\"nav-item dropdown\">\r\n                <a class=\"nav-links dropdown-toggle\" href=\"#\" id=\"navbarDarkDropdownMenuLink\" role=\"button\" data-bs-toggle=\"dropdown\" aria-expanded=\"false\">\r\n                    Login\r\n                </a>\r\n                <ul class=\"dropdown-menu dropdown-menu-dark\" aria-labelledby=\"navbarDarkDropdownMenuLink\">\r\n                    <li className=\"dropdown-item\">\r\n                    <Link to=\"/student-log\" className=\"nav-links\" onClick={closeMobileMenu}>\r\n                    Student\r\n                    </Link>\r\n                    </li>\r\n                    <li className=\"dropdown-item\">\r\n                    <Link to=\"/admin-log\" className=\"nav-links\" onClick={closeMobileMenu}>\r\n                    Admin\r\n                    </Link>\r\n                    </li>\r\n                    {/* <li><a class=\"dropdown-item\" href=\"#\">Student</a></li>\r\n                    <li><a class=\"dropdown-item\" href=\"Adm_login.js\">Admin</a></li> */}\r\n                </ul>\r\n                </li>\r\n                {/* <li className=\"nav-item\">\r\n                <Link to=\"/login\" className=\"nav-links\" onClick={closeMobileMenu}>\r\n                Login\r\n                </Link>\r\n                </li> */}\r\n            </ul>\r\n            </div>\r\n          \r\n            \r\n        </div> \r\n        </IconContext.Provider>   \r\n        </>\r\n    )\r\n}\r\n\r\nexport default Navbar\r\n","F:\\FullStack\\React\\ReactProject\\KAPS\\online-examination-system\\src\\components\\pages\\Footer.js",[],"F:\\FullStack\\React\\ReactProject\\KAPS\\online-examination-system\\src\\components\\ScrollToTop.js",[],"F:\\FullStack\\React\\ReactProject\\KAPS\\online-examination-system\\src\\components\\pages\\Pricing.js",[],"F:\\FullStack\\React\\ReactProject\\KAPS\\online-examination-system\\src\\components\\pages\\Notfound.js",[],"F:\\FullStack\\React\\ReactProject\\KAPS\\online-examination-system\\src\\components\\pages\\ContactUs.js",["144","145","146","147","148","149","150","151","152"],"import React, { Component } from 'react'\r\nimport axios from 'axios'\r\n\r\nexport class ContactUs extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            name: '',\r\n            email: '',\r\n            number: '',\r\n            inquiry: '',\r\n            errormessage: '',\r\n            sent: false\r\n        };\r\n    }\r\n\r\n    myChangeHandler = (event) => {\r\n        let nam = event.target.name;\r\n        let val = event.target.value;\r\n        let err = '';\r\n\r\n\r\n        if (nam === \"name\") {\r\n            if (val == \"\") {\r\n                err = '*Your Name field cannot be blank';\r\n            }\r\n        }\r\n        if (nam === \"email\") {\r\n            if (val == \"\") {\r\n                err = '*Your Email field cannot be blank';\r\n            }\r\n        }\r\n        if (nam === \"number\") {\r\n            if (val === \"\" || !Number(val) || val.length != 10) {\r\n                err = '*Please enter a valid number';\r\n            }\r\n        }\r\n        this.setState({ errormessage: err });\r\n\r\n        this.setState({ [nam]: val });\r\n    }\r\n\r\n    formSubmit = (e) => {\r\n\r\n        let data = {\r\n            name: this.state.name,\r\n            email: this.state.email,\r\n            number: this.state.number,\r\n            inquiry: this.state.inquiry\r\n        }\r\n        axios.post('/api/forma', data).then(res => {\r\n            this.setState({\r\n                sent: true,\r\n            }, this.resetForm())\r\n        }).catch(() => {\r\n            console.log('Message not sent!')\r\n        })\r\n        alert('Mail has been sent! Sorry for the incovinience.')\r\n    }\r\n\r\n\r\n    resetForm = () => {\r\n        this.setState({\r\n            name: '',\r\n            email: '',\r\n            number: '',\r\n            inquiry: '',\r\n        })\r\n        setTimeout(() => {\r\n            this.setState({\r\n                sent: false,\r\n            })\r\n        }, 5000);\r\n\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div class=\"container-fluid center\">\r\n                <div class=\"container\">\r\n                    <div class=\"row mb-3\">\r\n                        <div class=\"center\">\r\n                            <div class=\"card\">\r\n                                <div class=\"card-header\" style={{ backgroundColor: 'lightblue' }}>\r\n                                    <h1 class=\"text-center\" style={{ paddingTop: '15px', textDecoration: 'underline Grey' }}>Contact Us</h1>\r\n                                    <hr />\r\n                                </div>\r\n                                <div class=\"card-body\">\r\n                                    <hr />\r\n                                    <div class=\"row\">\r\n                                        <div class=\"col-md-7\">\r\n                                            <form onSubmit={this.formSubmit}>\r\n                                                <div class=\"mb-3 row\" style={{ padding: '3px' }}>\r\n                                                    <div class=\"col-md-4\">\r\n                                                        <label for=\"name\">Name</label>\r\n                                                    </div>\r\n                                                    <div class=\"col-md-8\">\r\n                                                        <input type=\"text\" name=\"name\" class=\"form-control\" placeholder=\"Type your name here\" onChange={this.myChangeHandler} required />\r\n\r\n                                                    </div>\r\n                                                </div>\r\n\r\n\r\n                                                <div class=\"mb-3  row\" style={{ padding: '3px' }}>\r\n                                                    <div class=\"col-md-4\">\r\n                                                        <label for=\"email\">E-mail</label>\r\n                                                    </div>\r\n                                                    <div class=\"col-md-8\">\r\n                                                        <input type=\"email\" name=\"email\" class=\"form-control\" placeholder=\"Type your e-mail\" onChange={this.myChangeHandler} required />\r\n\r\n                                                    </div>\r\n                                                </div>\r\n\r\n                                                <div class=\"mb-3  row\" style={{ padding: '3px' }}>\r\n                                                    <div class=\"col-md-4\">\r\n                                                        <label for=\"number\">Phone Number</label>\r\n                                                    </div>\r\n                                                    <div class=\"col-md-8\">\r\n                                                        <input type=\"text\" name=\"number\" minLength='10' maxLength='10'  class=\"form-control\" placeholder=\"So we can reach you\" onChange={this.myChangeHandler} required />\r\n\r\n                                                    </div>\r\n                                                </div>\r\n\r\n                                                <div class=\"mb-3  row\" style={{ padding: '3px' }}>\r\n                                                    <div class=\"col-md-4\">\r\n                                                        <label for=\"inquiry\">Inquiry</label>\r\n                                                    </div>\r\n                                                    <div class=\"col-md-8\">\r\n                                                        <input type=\"text\" name=\"inquiry\" class=\"form-control\" placeholder=\"So we can reach you\" onChange={this.myChangeHandler} required />\r\n                                                        <p class=\"text-center\" style={{ fontSize: \"13px\" }}>\r\n                                                            We are sorry if you are experiecing any problems.\r\n                                                            We will try our best to solve the issues in no time.\r\n                                                        </p>\r\n                                                    </div>\r\n                                                </div>\r\n\r\n\r\n                                                <div class=\"mb-3  row\" style={{ padding: '3px' }}>\r\n                                                    <div class=\"col-md-4\">\r\n                                                    </div>\r\n                                                    <div class=\"col-md-8\">\r\n                                                        <button class=\"btn btn-primary\">Submit request</button>\r\n                                                        {this.state.errormessage}\r\n                                                    </div>\r\n                                                </div>\r\n\r\n                                            </form>\r\n                                        </div>\r\n                                        <div class=\"mb-3  row \" class='text-center' data-wow-delay=\".2s\" margin-right='20px'>\r\n                                            <div class=\"col-md-12\">\r\n                                                <iframe src=\"https://www.google.com/maps/embed?pb=!1m14!1m8!1m3!1d1890.9341526967157!2d73.737176!3d18.5799751!3m2!1i1024!2i768!4f13.1!3m3!1m2!1s0x3bc2bbe5b036291d%3A0xcb8abc91bdca4c48!2sLTI!5e0!3m2!1sen!2sin!4v1609779814951!5m2!1sen!2sin\" width=\"600\" height=\"450\" frameborder=\"0\" style=\"border:0;\" allowfullscreen=\"\" aria-hidden=\"false\" tabindex=\"0\"\r\n                                                    width=\"80%\" height={400} frameBorder={0} style={{ border: \"2px black solid\" }} allowFullScreen data-aos=\"fade-left\" data-aos-duration={3000} />\r\n                                            </div>\r\n                                        </div>\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default ContactUs\r\n\r\n","F:\\FullStack\\React\\ReactProject\\KAPS\\online-examination-system\\src\\components\\pages\\Home.js",[],"F:\\FullStack\\React\\ReactProject\\KAPS\\online-examination-system\\src\\components\\pages\\Features.js",["153"],"import React, { Component } from 'react'\r\nimport {MdSubject} from 'react-icons/md'\r\nimport './Features.css';\r\nimport {AiFillCamera} from 'react-icons/ai'\r\nimport {MdLibraryBooks} from 'react-icons/md'\r\nimport {IoMdOptions} from 'react-icons/io'\r\nimport {MdFingerprint} from 'react-icons/md'\r\nimport {FaCertificate} from 'react-icons/fa'\r\nimport {GoGraph} from 'react-icons/go'\r\nexport class Features extends Component {\r\n    render() {\r\n        return (\r\n            <div>\r\n               \r\n            <div >\r\n                <div class=' row1'>\r\n                    <p class='para'>AN AWARD WINNING ONLINE ASSESSMENT PLATFORM</p>\r\n                </div>\r\n                <div class=\"container container2\">\r\n                    <div class=\"row row2\">\r\n                        <div class=\"col-sm\">\r\n                        <div class=\"card\" style={{width: '20rem'}}>\r\n                            <div class='icon'><AiFillCamera/></div>\r\n                            <div class=\"card-body\">\r\n                                <h5 class=\"card-title\">AI Based Proctoring</h5>\r\n                                <p class=\"card-text\">Conduct online exams, proctored entrance exams using our scalable platform and proctoring technology.</p>\r\n                            </div>\r\n                        </div>\r\n                        </div>\r\n                        <div class=\"col-sm\">\r\n                        <div class=\"card\" style={{width: '20rem'}}>\r\n                            <div class='icon'><MdLibraryBooks/></div>\r\n                            <div class=\"card-body\">\r\n                                <h5 class=\"card-title\">Question Bank Availability</h5>\r\n                                <p class=\"card-text\">Question Banks with a lot of questions for every subject is available for preparation.</p>\r\n                            </div>\r\n                        </div>\r\n                        </div>\r\n                        <div class=\"col-sm\">\r\n                        <div class=\"card\" style={{width: '20rem'}}>\r\n                            <div class='icon'><IoMdOptions/></div>\r\n                            <div class=\"card-body\">\r\n                                <h5 class=\"card-title\">Different Types of Exams</h5>\r\n                                <p class=\"card-text\">Wide Range Of Exams type : Subjective, Objective, Viva, Mock, Personality tests</p>\r\n                                \r\n                            </div>\r\n                        </div>\r\n                        </div>\r\n                    </div>\r\n    \r\n                    <div class=\"row\">\r\n                        <div class=\"col-sm\">\r\n                        <div class=\"card\" style={{width: '20rem'}}>\r\n                            <div class='icon'><GoGraph/></div>\r\n                            <div class=\"card-body\">\r\n                                <h5 class=\"card-title\">Exam Analysis Report</h5>\r\n                                <p class=\"card-text\">System generates individual ranking based on total score of the candidate during online exam. </p>\r\n                            </div>\r\n                        </div>\r\n                        </div>\r\n                        <div class=\"col-sm\">\r\n                        <div class=\"card\" style={{width: '20rem'}}>\r\n                            <div class='icon'><FaCertificate/></div>\r\n                            <div class=\"card-body\">\r\n                                <h5 class=\"card-title\">Online Certification</h5>\r\n                                <p class=\"card-text\">You will get certificate from industry Experts which can be used in your further career for admissions and recruitment.</p>\r\n                            </div>\r\n                        </div>\r\n                        </div>\r\n                        <div class=\"col-sm\">\r\n                        <div class=\"card\" style={{width: '20rem'}}>\r\n                            <div class='icon'><MdFingerprint/></div>\r\n                            <div class=\"card-body\">\r\n                                <h5 class=\"card-title\">Candidate Identity Verification</h5>\r\n                                <p class=\"card-text\">In this case prior to start of online exam,candidate is supposed to show individual identity card, Exam hall ticket in front of camera.</p>   \r\n                            </div>\r\n                        </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default Features\r\n","F:\\FullStack\\React\\ReactProject\\KAPS\\online-examination-system\\src\\components\\pages\\Services.js",["154","155","156","157","158","159"],"import React, { Component } from 'react'\r\nimport './Services.css';\r\nimport {AiFillCamera} from 'react-icons/ai'\r\nimport {MdLibraryBooks} from 'react-icons/md'\r\nimport {IoMdOptions} from 'react-icons/io'\r\nimport {MdFingerprint} from 'react-icons/md'\r\nimport {FaCertificate} from 'react-icons/fa'\r\nimport {GoGraph} from 'react-icons/go'\r\n\r\nexport class Services extends Component {\r\n    render() {\r\n        return (\r\n            <div>\r\n                <div class='first'>\r\n                    <h1 class='maintext'>Assessment for Education Institute</h1>\r\n                    <p class='parag'>  Online Assessments can be useful to conduct online entrance exams, internal exams, university exams, online aptitude tests.<br/>\r\n                            Do you want to use technology to automate Pen and paper-based Tests?<br/>\r\n                             Are you exploring the option of digital assessments for your educational institution?<br/>\r\n                             Many universities/ institutes are using online assessment tools to enhance and improve their examination structure.<br/>\r\n                             Training institutes can use the online Assessment Process to guide their students while preparing for various exams.</p>\r\n                </div>\r\n                <div class='second'>\r\n                    <h1 class='maintext'>Assessment for corporate</h1>\r\n                    <p class='parag'>Online assessments can help corporate to simplify hiring, recruitment, assessment of employees, performance evaluation after training, analysis of training programs.\r\n\r\n \r\n\r\nDigital Assessments can help companies to simplify employee training, employee evaluation, or even recruitment process simplification.\r\n\r\n \r\n\r\nMany organizations have benefited from the usage of the Eklavvya platform for managing their assessment process digitally. You can explore the below video and all relevant articles for details to understand how you can be benefited from the digital assessment strategy.</p>\r\n                </div>\r\n                <div class='first'>\r\n                    <h1 class='maintext'>Assessment for schools</h1>\r\n                    <p class='parag'>Education technology adoption in school is increasing. Technology can help schools to enhance education delivery along with conducting exams.\r\n\r\nThe online examination system provides ways to manage online exams for your K12 students. It would help you to simplify exam administration, reduce the cost of managing the exam process, proctoring technology can help to detect/ prevent exam cheating activities.\r\n\r\n \r\n\r\nWe have conducted school certification tests, mock exams, academic exams, scholarship tests for various national and international schools, certification agencies, NGOs successfully.\r\n\r\n</p>\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default Services\r\n","F:\\FullStack\\React\\ReactProject\\KAPS\\online-examination-system\\src\\components\\pages\\Admin\\Adm_login.js",["160","161"],"import axios from 'axios';\r\nimport React, { Component } from 'react'\r\nimport { Link, NavLink } from 'react-router-dom';\r\n\r\nexport class Adm_login extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            email: '',\r\n            password: '',\r\n            errormessage: ''\r\n        };\r\n    }\r\n    submithandler =  event => {  \r\n          event.preventDefault()\r\n        const data2 = {\r\n            \r\n            \"Email\" : this.state.email,\r\n            \r\n            \"Password\" : this.state.password\r\n            \r\n        }\r\n        // alert('hi');\r\n        // alert(JSON.stringify(data2))\r\n         axios.post(`http://localhost:5000/adminModel/login`,data2).then(res => {\r\n        //  alert(JSON.stringify(res.data) )   \r\n        // console.log();\r\n            console.log(res.data);\r\n            if(res.data.message ===\"Invalid Email or Password!\")\r\n            {\r\n                alert(res.data.message)\r\n            }\r\n            else{\r\n                alert(res.data.message)\r\n                this.props.history.push({\r\n                    pathname: '/adminMain/usermgt'\r\n                    \r\n                  })\r\n            }\r\n            \r\n        })\r\n        \r\n    }\r\n\r\n    myChangeHandler = (event) => {\r\n        let nam = event.target.name;\r\n        let val = event.target.value;\r\n        let err = '';\r\n\r\n\r\n        if (nam === \"email\") {\r\n            if (val == \"\") {\r\n                err = '*Cannot proceed without email!';\r\n            }\r\n        }\r\n\r\n        this.setState({ errormessage: err });\r\n        this.setState({ [nam]: val });\r\n    }\r\n    render() {\r\n        return (\r\n            <div class=\"container-fluid\" >\r\n                <div class=\"container\">\r\n                    <div class=\"row mb-3\">\r\n                        <div class=\"center\">\r\n                            <div class=\"card\">\r\n                                <div class=\"card-header\" style={{ backgroundColor: 'lightblue' }}>\r\n                                    <h1 class=\"text-center\" style={{paddingTop:'15px',textDecoration:'underline Grey'}}>Admin Login</h1>\r\n                                    <hr />\r\n                                </div>\r\n                                <div class=\"card-body\">\r\n                                <hr />\r\n                                    <div class=\"row\">\r\n                                        <div class=\"col-md-7\">\r\n                                            <form onSubmit={this.submithandler} >\r\n                                                <div class=\"mb-3 row\" style={{padding:'3px'}}>\r\n                                                    <div class=\"col-md-4\">\r\n                                                        <label for=\"email\">Enter official E-Mail ID</label>\r\n                                                    </div>\r\n                                                    <div class=\"col-md-8\">\r\n                                                        <input type=\"email\" name=\"email\" class=\"form-control\" placeholder=\"Enter Registered email address\" onChange={this.myChangeHandler} required/>\r\n                                                        {this.state.errormessage}\r\n                                                    </div>\r\n                                                </div>\r\n\r\n                                                <div class=\"mb-3 row\" style={{padding:'3px'}}>\r\n                                                    <div class=\"col-md-4\">\r\n                                                        <label for=\"password\">Password</label>\r\n                                                    </div>\r\n                                                    <div class=\"col-md-8\">\r\n                                                        <input type=\"password\"onChange={this.myChangeHandler} name=\"password\" class=\"form-control\" placeholder=\"Enter Password\" required/>\r\n\r\n                                                    </div>\r\n                                                </div>\r\n\r\n                                                <div class=\"mb-3 row\" style={{padding:'3px'}}>\r\n                                                    <div class=\"col-md-4\">\r\n                                                    </div>\r\n                                                    <div class=\"col-md-8\">\r\n                                                       {/* <NavLink to=\"/AdminMain/usermgt\"><button class=\"btn btn-primary\" >Login</button></NavLink>  */}\r\n                                                       <button className=\"btn btn-primary\" type=\"submit\" >login</button>\r\n                                                        \r\n                                                    </div>\r\n                                                </div>\r\n\r\n                                                <div class=\"mb-3 row\" style={{padding:'3px'}}>\r\n                                                    <div class=\"col-md-4\">\r\n                                                    </div>\r\n                                                    <div class=\"col-md-8\">\r\n                                                        <p style={{fontSize:\"15px\"}}>Dont have an account yet? Create a new Administrator account. </p>\r\n                                                        \r\n                                                        <Link to='/admin-register' >Register Here</Link>                                   \r\n                                                 </div>\r\n                                                </div>\r\n                                            </form>\r\n                                        </div>\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\n\r\nexport default Adm_login\r\n","F:\\FullStack\\React\\ReactProject\\KAPS\\online-examination-system\\src\\components\\pages\\Admin\\AdminMain.js",[],"F:\\FullStack\\React\\ReactProject\\KAPS\\online-examination-system\\src\\components\\pages\\Admin\\UserMgt.js",["162","163","164"],"import React, { useState, useEffect } from 'react'\r\nimport AdminMain from './AdminMain'\r\nimport axios from 'axios';\r\n\r\n\r\nfunction UserMgt() {\r\n\r\n    const [user, setUser] = useState([]);\r\n\r\n    //const { id,Name, Email, Phone, Password, Sector, Organisation } = user;\r\n    const [Userid,setUserid] = useState('');\r\n    const [Nametext, setNametext] = useState('');\r\n    const [Emailtext, setEmailtext] = useState('');\r\n    const [Phonetext, setPhonetext] = useState('');\r\n    const [Orgtext, setOrgtexttext] = useState('');\r\n    const [NameOrgtext, setNameOrgtext] = useState('');\r\n\r\n   \r\n    \r\n\r\n    useEffect(() => {\r\n        loadusers();\r\n    }, []);\r\n\r\n     const loadusers = async () => {\r\n        const result = await axios.get('http://localhost:5000/studentModel');\r\n        setUser(result.data);\r\n    };\r\n\r\n    function setModalvalues(id) {\r\n        alert('Updating... ' + id.Name +' -UniqueID: ' + id._id);\r\n        setUserid(id.id)\r\n        setNametext(id.Name);\r\n        setEmailtext(id.Email);\r\n        setPhonetext(id.Phone);\r\n        setOrgtexttext(id.Org);\r\n        setNameOrgtext(id.NameOrg);\r\n        \r\n       \r\n    }\r\n   \r\n    const updateusers = async (e) => {\r\n        e.preventDefault()\r\n        alert(user._id+ \"calling from update\")\r\n        const result = await axios.put(`http://localhost:5000/studentModel/${user._id}`,{\r\n             \"Name\": Nametext,\r\n             \"Email\": Emailtext,\r\n             \"Password\": '',\r\n             \"Sector\": '',\r\n             \"Organisation\": '',\r\n             \"Phone\": ''\r\n\r\n        });\r\n       \r\n        //const result = await axios.put('http://localhost:5000/getUserMgnt/' + id);\r\n        setUser(result.data);\r\n    };\r\n\r\nconst deleteUser= async id=>{\r\n    alert('deleting :'+id);\r\n    const result = await axios.delete(`http://localhost:5000/studentModel/${id}`);\r\n    loadusers();\r\n}\r\n\r\n    return (\r\n        <div >\r\n            <AdminMain></AdminMain>\r\n            <div style={{ marginBottom: \"100px\" }}>\r\n                <br></br>\r\n                <h1 className=\"text-center\">Welcome to user management</h1>\r\n                <div className=\"container-fluid\" >\r\n                    <table className=\"table table-striped table-hover border shadow\">\r\n                        <thead>\r\n                            <tr className=\"table-primary\">\r\n                                <th>Sr. No</th>\r\n                                <th >Name</th>\r\n                                <th> Email</th>\r\n                                <th> Phone</th>\r\n                                <th> Password</th>\r\n                                <th> Sector</th>\r\n                                <th> Organisation</th>\r\n                                \r\n\r\n                                {/* <th>Edit Record</th> */}\r\n                                <th>Delete Record</th>\r\n                            </tr>\r\n                        </thead>\r\n                        <tbody>\r\n                            {\r\n                                user.map((user, index) => {\r\n                                   \r\n                                    \r\n                                    return(\r\n                                    <tr>\r\n                                        <th scope='row'>{index + 1}</th>\r\n                                        <td>{user.Name}</td>\r\n                                        <td>{user.Email}</td>\r\n                                        <td>{user.Phone}</td>\r\n                                        <td>{user.Password}</td>\r\n                                        <td>{user.Org}</td>\r\n                                        <td>{user.NameOrg}</td>\r\n                                        \r\n                                      \r\n\r\n                                        {/* <td><button className=\"btn btn-primary\" data-bs-toggle=\"modal\"\r\n                                            data-bs-target=\"#editUser\" onClick={() => setModalvalues(user)}>Edit\r\n                                            </button>\r\n                                            </td> */}\r\n                                        <td><button className=\"btn btn-danger\" onClick={()=>deleteUser(user._id)}>Delete</button></td>\r\n                                    </tr>\r\n                                )})\r\n                            }\r\n                        </tbody>\r\n                    </table>\r\n                </div>\r\n\r\n\r\n                {/*  on edit this opens */}\r\n                <div class=\"modal fade\" id=\"editUser\" tabindex=\"-1\" aria-labelledby=\"EditUser\" aria-hidden=\"true\">\r\n                    <div class=\"modal-dialog modal-dialog-centered modal-dialog-scrollable\">\r\n                        <div class=\"modal-content\">\r\n                            <div class=\"modal-header\">\r\n                                <h5 class=\"modal-title\" > Edit Details </h5>\r\n                                {/* <!-- this is cross mark --> */}\r\n                                <button type=\"button\" class=\"btn-close\" data-bs-dismiss=\"modal\" aria-label=\"close\"></button>\r\n                            </div>\r\n\r\n                            <div class=\"modal-body\">\r\n                                <form id=\"edit-form\" onSubmit='/' >\r\n                                    <div class=\"mb-3\">\r\n                                        <label for=\"username\" class=\"form-label\">Name</label>\r\n                                        <input type=\"text\" class=\"form-control\" id=\"username\" defaultValue={Nametext} />\r\n                                        {/* <div id=\"username\" class=\"form-text\">create a suitable username.</div>  */}\r\n                                    </div>\r\n                                    <div class=\"mb-3\">\r\n                                        <label for=\"emailId\" class=\"form-label\">Email Id</label>\r\n                                        <input type=\"text\" class=\"form-control\" id=\"emailId\" defaultValue={Emailtext}/>\r\n                                    </div>\r\n                                    <div class=\"mb-3\">\r\n                                        <label for=\"phoneNo\" class=\"form-label\">Phone</label>\r\n                                        <input type=\"text\" class=\"form-control\" id=\"phoneNo\" defaultValue={Phonetext}/>\r\n                                    </div>\r\n                                    <div class=\"mb-3\">\r\n                                        <label for=\"subject\" class=\"form-label\">Sector</label>\r\n                                        <input type=\"text\" class=\"form-control\" id=\"subject\" defaultValue={Orgtext}/>\r\n                                    </div>\r\n                                    <div class=\"mb-3\">\r\n                                        <label for=\"marks\" class=\"form-label\">Organisation</label>\r\n                                        <input type=\"text\" class=\"form-control\" id=\"marks\" defaultValue={NameOrgtext}/>\r\n                                    </div>\r\n\r\n                                    {/* <!-- <button type=\"submit\" class=\"btn btn-primary\">Submit</button> --> */}\r\n                                    <div class=\"modal-footer\">\r\n                                <button type=\"button\" class=\"btn btn-secondary\" data-bs-dismiss=\"modal\">close</button>\r\n                                <button type=\"submit\" form=\"edit-form\" class=\"btn btn-primary\" onClick={updateusers}>Update</button>\r\n                            </div>\r\n                                </form>\r\n                            </div>\r\n                            \r\n                        </div>\r\n                    </div>\r\n                </div>\r\n\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default UserMgt\r\n","F:\\FullStack\\React\\ReactProject\\KAPS\\online-examination-system\\src\\components\\pages\\Admin\\Adm_Registration.js",["165"],"import axios from 'axios';\r\nimport React, { Component } from 'react'\r\nimport { Link, NavLink } from 'react-router-dom';\r\n\r\nexport class Adm_Registration extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            name: '',\r\n            email: '',\r\n            number: '',\r\n            password: '',\r\n            confirm_password: '',\r\n            errormessage: '',\r\n            org: '',\r\n            nameOrg: ''\r\n        };\r\n    }\r\n   \r\n    submithandler = async event => {  \r\n        event.preventDefault() \r\n        const data2 = {\r\n            \"Name\" : this.state.name,\r\n            \"Email\" : this.state.email,\r\n            \"Phone\" : this.state.number,\r\n            \"Password\" : this.state.password,\r\n            \"Org\" : this.state.org,\r\n            \"NameOrg\" : this.state.nameOrg\r\n        }\r\n        \r\n        await axios.post(`http://localhost:5000/adminModel`,data2).then(res => {\r\n         alert(JSON.stringify(res.data.message) )   \r\n        // console.log();\r\n            console.log(res.data);\r\n        })\r\n        \r\n    }\r\n\r\n    myChangeHandler = (event) => {\r\n        let nam = event.target.name;\r\n        let val = event.target.value;\r\n        let err = '';\r\n\r\n        if (nam === \"name\") {\r\n            if (val === \"\") {\r\n                err = '*Please Enter your name for registration!';\r\n            }\r\n        }  \r\n        if (nam === 'email') {\r\n            if (val === \"\") {\r\n                err = '*Please Enter your e-mail for registration!';\r\n            }\r\n        }  \r\n        if (nam === \"number\") {\r\n            if (val !== \"\" && !Number(val)) {\r\n                err = '*Please enter a valid number';\r\n            }\r\n        }\r\n\r\n        this.setState({ errormessage: err });\r\n        this.setState({ [nam]: val });\r\n    }\r\n \r\n\r\n    render() {\r\n        return (\r\n            <div className=\"container-fluid\">\r\n                <div className=\"container\">\r\n                    <div className=\"row mb-3\">\r\n                        <div className=\"center\">\r\n                            <div className=\"card\">\r\n                                <div className=\"card-header\" style={{ backgroundColor: 'lightblue' }}>\r\n                                    <h1 className=\"text-center\" style={{paddingTop:'15px',textDecoration:'underline Grey'}}>Admin Registeration</h1>\r\n                                    <hr />\r\n                                </div>\r\n                                <div className=\"card-body\">\r\n                                <hr />\r\n                                    <div className=\"row\">\r\n                                        <div className=\"col-md-7\">\r\n                                            <form onSubmit={this.submithandler}>\r\n                                                <div className=\"mb-3 row\" style={{padding:'3px'}}>\r\n                                                    <div className=\"col-md-4\">\r\n                                                        <label for=\"name\">Name</label>\r\n                                                    </div>\r\n                                                    <div className=\"col-md-8\">\r\n                                                        <input type=\"text\" name=\"name\" value={this.state.name} className=\"form-control\" placeholder=\"Type your name here\" onChange={this.myChangeHandler} required />\r\n                                                    \r\n                                                    </div>\r\n                                                </div>\r\n\r\n                                                <div className=\"mb-3 row\" style={{padding:'3px'}}>\r\n                                                    <div className=\"col-md-4\">\r\n                                                        <label for=\"email\">E-mail</label>\r\n                                                    </div>\r\n                                                    <div className=\"col-md-8\">\r\n                                                        <input type=\"email\" name=\"email\" value={this.state.email} className=\"form-control\" placeholder=\"Type your e-mail\" onChange={this.myChangeHandler} required />\r\n\r\n                                                    </div>\r\n                                                </div>\r\n\r\n                                                <div className=\"mb-3 row\" style={{padding:'3px'}}>\r\n                                                    <div className=\"col-md-4\">\r\n                                                        <label htmlFor=\"number\">Phone Number</label>\r\n                                                    </div>\r\n                                                    <div className=\"col-md-8\">\r\n                                                        <input type=\"text\" minLength='10' value={this.state.number} maxLength='10' name=\"number\" className=\"form-control\" placeholder=\"So we can reach you\" onChange={this.myChangeHandler} required />\r\n\r\n                                                    </div>\r\n                                                </div>\r\n\r\n                                                <div className=\"mb-3 row\" style={{padding:'3px'}}>\r\n                                                    <div className=\"col-md-4\">\r\n                                                        <label htmlFor=\"password\">Password</label>\r\n                                                    </div>\r\n                                                    <div className=\"col-md-8\">\r\n                                                        <input type=\"password\" id=\"txtPassword\" value={this.state.password} name=\"password\" className=\"form-control password\" placeholder=\"Enter password for your account.\" onChange={this.myChangeHandler} required />\r\n\r\n                                                    </div>\r\n                                                </div>\r\n\r\n                                                <div className=\"mb-3 row\" style={{padding:'3px'}}>\r\n                                                    <div className=\"col-md-4\">\r\n                                                        <label for=\"confirm_password\">Confirm Password</label>\r\n                                                    </div>\r\n                                                    <div className=\"col-md-8\">\r\n                                                        <input type=\"password\" id=\"txtConfirmPassword\" value={this.state.confirm_password} name=\"confirm_password\" className=\"form-control confirmPassword\" placeholder=\"re-Enter password for your account\" onChange={this.myChangeHandler} required />\r\n                                                        <span id='errdisplay' style={{fontSize:'13px'}}></span>\r\n\r\n                                                    </div>\r\n                                                </div>\r\n\r\n                                                <div className=\"mb-3 row\" style={{padding:'3px'}}>\r\n                                                    <div className=\"col-md-4\">\r\n                                                        <label for=\"organisation\">Select Organisation</label>\r\n                                                    </div>\r\n                                                    <div className=\"col-md-8\">\r\n                                                        <select name='org' value={this.state.org} onChange={this.myChangeHandler} required>\r\n                                                            <option value=\"\">Select your Sector</option>\r\n                                                            <option value='scl'>School</option>\r\n                                                            <option value='clg'>College</option>\r\n                                                            <option value='corp'>Corporate</option>\r\n                                                        </select>\r\n                                                    </div>\r\n                                                </div>\r\n\r\n                                                <div className=\"mb-3 row\" style={{padding:'3px'}}>\r\n                                                    <div className=\"col-md-4\">\r\n                                                        <label for=\"nameOrg\">Name of the organisation</label>\r\n                                                    </div>\r\n                                                    <div className=\"col-md-8\">\r\n                                                        <input type=\"text\" value={this.state.nameOrg} onChange={this.myChangeHandler} name=\"nameOrg\" className=\"form-control\" placeholder=\"Name of your Orangisation\" required/>\r\n\r\n                                                    </div>\r\n                                                </div>\r\n                                                <h5 style={{color:\"red\",marginLeft:'250px'}}>{this.state.errormessage}</h5>\r\n                                                <div className=\"mb-3 row\" style={{padding:'3px'}}>\r\n                                                    <div className=\"col-md-4\">\r\n                                                    </div>\r\n                                                    <div className=\"col-md-8\">\r\n                                                        <button className=\"btn btn-primary\" type='submit' id='btnSubmit' onSubmit='addtodb()'>Register</button>\r\n                                                       \r\n                                                    </div> \r\n                                                    \r\n                                                </div>\r\n\r\n                                                <div class=\"mb-3 row\" style={{padding:'3px'}}>\r\n                                                    <div class=\"col-md-4\">\r\n                                                    </div>\r\n                                                    <div class=\"col-md-8\">\r\n                                                        <p style={{fontSize:\"15px\"}}>Already Have an account? <Link to='/admin-log' >Login Here</Link> </p>\r\n                                                 </div>\r\n                                                </div>\r\n                                            </form>\r\n                                        </div>\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default Adm_Registration\r\n","F:\\FullStack\\React\\ReactProject\\KAPS\\online-examination-system\\src\\components\\pages\\Admin\\AddSubjects.js",["166"],"F:\\FullStack\\React\\ReactProject\\KAPS\\online-examination-system\\src\\components\\pages\\Admin\\DisplayQuestions.js",["167"],"import React from 'react'\r\nimport { NavLink } from 'react-router-dom'\r\nimport AdminMain from './AdminMain'\r\n\r\nfunction DisplayQuestions() {\r\n    return (\r\n        <div>\r\n            <AdminMain></AdminMain>\r\n            <div className=\"container\">\r\n            <h1>questions will be displayed here</h1>\r\n            </div>\r\n           \r\n        </div>\r\n    )\r\n}\r\n\r\nexport default DisplayQuestions\r\n","F:\\FullStack\\React\\ReactProject\\KAPS\\online-examination-system\\src\\components\\pages\\Admin\\QuestionEdit.js",["168","169","170","171"],"F:\\FullStack\\React\\ReactProject\\KAPS\\online-examination-system\\src\\components\\pages\\Student\\Stud_login.js",["172","173"],"import axios from 'axios';\r\nimport React, { Component } from 'react'\r\nimport { Link, NavLink } from 'react-router-dom';\r\n\r\nexport class Stud_login extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            username: '',\r\n            password: '',\r\n            errormessage: ''\r\n        };\r\n    }\r\n    \r\n    submithandler =  event => {  \r\n        event.preventDefault()\r\n      const data2 = {\r\n          \"Email\" : this.state.email,  \r\n          \"Password\" : this.state.password \r\n      }\r\n      // alert('hi');\r\n    //    alert(JSON.stringify(data2))\r\n      \r\n       axios.post(`http://localhost:5000/studentModel/login`,data2).then(res => {\r\n      //  alert(JSON.stringify(res.data) )   \r\n      // console.log();\r\n          console.log(res.data);\r\n          if(res.data.message ===\"Invalid Email or Password!\")\r\n          {\r\n              alert(res.data.message)\r\n          }\r\n          else{\r\n              alert(\"logged in sucessfully\")\r\n              this.props.history.push({\r\n                  pathname: '/TestSelection'\r\n                  \r\n                })\r\n          }\r\n          \r\n      })\r\n      \r\n  }\r\n    myChangeHandler = (event) => {\r\n        let nam = event.target.name;\r\n        let val = event.target.value;\r\n        let err = '';\r\n\r\n\r\n        if (nam === \"email\") {\r\n            if (val == \"\") {\r\n                err = '*Cannot proceed without email!';\r\n            }\r\n        }\r\n\r\n        this.setState({ errormessage: err });\r\n        this.setState({ [nam]: val });\r\n    }\r\n    render() {\r\n        return (\r\n            <div class=\"container-fluid\" >\r\n                <div class=\"container\">\r\n                    <div class=\"row mb-3\">\r\n                        <div class=\"center\">\r\n                            <div class=\"card\">\r\n                                <div class=\"card-header\" style={{ backgroundColor: 'lightblue' }}>\r\n                                    <h1 class=\"text-center\" style={{paddingTop:'15px',textDecoration:'underline Grey'}}>Student Login</h1>\r\n                                    <hr />\r\n                                </div>\r\n                                <div class=\"card-body\">\r\n                                <hr />\r\n                                    <div class=\"row\">\r\n                                        <div class=\"col-md-7\">\r\n                                            <form onSubmit={this.submithandler}>\r\n                                                <div class=\"mb-3 row\" style={{padding:'3px'}}>\r\n                                                    <div class=\"col-md-4\">\r\n                                                        <label for=\"email\">Enter Email</label>\r\n                                                    </div>\r\n                                                    <div class=\"col-md-8\">\r\n                                                        <input type=\"email\" name=\"email\" class=\"form-control\" placeholder=\"Enter Registered email address\" onChange={this.myChangeHandler} required/>\r\n                                                        {this.state.errormessage}\r\n                                                    </div>\r\n                                                </div>\r\n\r\n                                                <div class=\"mb-3 row\" style={{padding:'3px'}}>\r\n                                                    <div class=\"col-md-4\">\r\n                                                        <label for=\"password\">Password</label>\r\n                                                    </div>\r\n                                                    <div class=\"col-md-8\">\r\n                                                        <input onChange={this.myChangeHandler} type=\"password\" name=\"password\" class=\"form-control\" placeholder=\"Enter Password\" required />\r\n\r\n                                                    </div>\r\n                                                </div>\r\n\r\n                                                <div class=\"mb-3 row\" style={{padding:'3px'}}>\r\n                                                    <div class=\"col-md-4\">\r\n                                                    </div>\r\n                                                    <div class=\"col-md-8\">\r\n                                                    <button className=\"btn btn-primary\" type=\"submit\" >login</button>\r\n                                                    </div>\r\n                                                </div>\r\n\r\n                                                <div class=\"mb-3 row\" style={{padding:'3px'}}>\r\n                                                    <div class=\"col-md-4\">\r\n                                                    </div>\r\n                                                    <div class=\"col-md-8\">\r\n                                                        <p style={{fontSize:\"15px\"}}>Dont have an account yet? Create a new Students account.</p> \r\n                                                        <Link to='/student-register' >Register Here</Link>\r\n                                                    </div>\r\n                                                </div>\r\n                                            </form>\r\n                                        </div>\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default Stud_login\r\n","F:\\FullStack\\React\\ReactProject\\KAPS\\online-examination-system\\src\\components\\pages\\Student\\TestSelection.js",[],"F:\\FullStack\\React\\ReactProject\\KAPS\\online-examination-system\\src\\components\\pages\\Student\\Stud_Registration.js",[],"F:\\FullStack\\React\\ReactProject\\KAPS\\online-examination-system\\src\\components\\pages\\Student\\Instructions.js",[],"F:\\FullStack\\React\\ReactProject\\KAPS\\online-examination-system\\src\\components\\pages\\Student\\ExamPage.js",["174","175","176","177","178","179"],"import axios from 'axios'\r\nimport React ,{ useState, useEffect }  from 'react'\r\nimport {Route , BrowserRouter as Router, Switch, Redirect} from 'react-router-dom'\r\n\r\nimport questions from '../../../Quiz'\r\nimport QuestionBox from './QuestionBox'\r\nimport QuestionButtons from './QuestionButtons'\r\nimport Timer from './Timer'\r\n\r\nfunction ExamPage(props) {\r\n    \r\n    useEffect(()=>{\r\n        loadQuestions();\r\n     },[]);\r\n\r\n    const [questionsArr, setquestionsArr] = useState(questions)//;load questions here\r\n    const [currQuestion,setCurrentQuestion]= useState(questions[0])\r\n    const [selectedAnsArr,setSelectedAnsArr]= useState(Array(questionsArr.length).fill(0))\r\n\r\n    \r\n    \r\n     const loadQuestions = async()=>{\r\n        //   alert('first')\r\n        let result1 = await axios.get('http://localhost:5000/id')\r\n        let id = result1.data[0].id;\r\n       // alert(JSON.stringify(result1.data[0].id) )\r\n        const result=await axios.get('http://localhost:5000/postSubjects/'+id);\r\n        setquestionsArr(result.data);\r\n        let i=0;\r\n        let cars = []\r\n        for (i = 0; i < result.data.length; i++) {\r\n         cars[i]=0 ;\r\n        }\r\n        setSelectedAnsArr(cars)\r\n       \r\n     }\r\n     \r\n    \r\n    const collectAllAns =()=>{}\r\n    //timer\r\n    const time = new Date();\r\n    time.setSeconds(time.getSeconds() + 600); // 10 minutes timer= 10*60=600\r\n    // setTimeout(()=>{\r\n    //     let i=0; let total =0;\r\n    //     for(i;i<selectedAnsArr.length;i++)\r\n    //     {\r\n    //        total += selectedAnsArr[i]\r\n    //     }\r\n      \r\n    //     props.history.push({\r\n    //        pathname: '/results',\r\n    //        state: { total: total }\r\n    //      })\r\n\r\n    //  },600000)\r\n   \r\n    return (\r\n\r\n        <div className=\"greenShade\">\r\n            \r\n            <Timer expiryTimestamp={time} />\r\n             {/* Whole page */}\r\n            <div className=\"container-fluid  examContainer \" >\r\n                <div className=\"row\">{/* All 3 boxes in a row */}\r\n                    <div className=\"col-md-4\">{/* first box of 1,2,3,4 */}\r\n                        <div className=\"card my-5\" style={{borderRadius:\"20px\"}}>\r\n                            <div className=\"card-body\">\r\n                                <h5 className=\"card-title\">Java</h5>\r\n                                <div className=\"card-text\">\r\n                                    <div className=\"container\">\r\n                                        <div className=\"row my2\">\r\n                                            {\r\n                                                questionsArr.map((quest)=>\r\n                                                ( \r\n                                                <QuestionButtons\r\n                                                    key ={quest.id}\r\n                                                  index={quest.id-1}\r\n                                                  setCurrentQuestion={setCurrentQuestion}\r\n                                                  questionsArr={questionsArr}\r\n                                                  //\r\n                                                /> ))\r\n                                            }\r\n                                        </div>\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                    {/* question panel */}\r\n                    <div className=\"col-md-8\">\r\n                   \r\n                   \r\n                        <QuestionBox\r\n                        selectedAnsArr={selectedAnsArr}\r\n                        setSelectedAnsArr={setSelectedAnsArr}\r\n                        currQuestion={currQuestion }\r\n                        questionsArr={questionsArr}\r\n                        setCurrentQuestion={setCurrentQuestion}\r\n                         /> \r\n                         <div style={{marginLeft:\"25%\"}}>\r\n                         <a  style={{borderRadius:\"20px\",padding:\"10px 30px\"}} className=\"btn btn-warning\" onClick={()=>{\r\n                             let i=0; let total =0;\r\n                             for(i;i<selectedAnsArr.length;i++)\r\n                             {\r\n                                total += selectedAnsArr[i]\r\n                             }\r\n                           \r\n                             props.history.push({\r\n                                pathname: '/results',\r\n                                state: { total: total }\r\n                              })\r\n                         }}>Submit</a>  \r\n                         </div>          \r\n                         \r\n\r\n                    </div>\r\n                    \r\n                        \r\n                    \r\n                </div>\r\n            </div>\r\n        </div>\r\n         )\r\n}\r\n\r\nexport default ExamPage\r\n","F:\\FullStack\\React\\ReactProject\\KAPS\\online-examination-system\\src\\components\\pages\\Student\\Results.js",[],"F:\\FullStack\\React\\ReactProject\\KAPS\\online-examination-system\\src\\components\\pages\\Student\\QuestionButtons.js",[],"F:\\FullStack\\React\\ReactProject\\KAPS\\online-examination-system\\src\\components\\pages\\Student\\Timer.js",[],"F:\\FullStack\\React\\ReactProject\\KAPS\\online-examination-system\\src\\Quiz.js",[],"F:\\FullStack\\React\\ReactProject\\KAPS\\online-examination-system\\src\\components\\pages\\Student\\QuestionBox.js",["180","181","182"],"import React,{useEffect, useState} from 'react'\r\nimport AllOptions from './AllOptions'\r\n\r\nfunction QuestionBox({currQuestion,questionsArr,setCurrentQuestion,selectedAnsArr,setSelectedAnsArr}) \r\n{\r\n    // const[sel,setSel]=useState(false)\r\n    const [allOpt,setAllOpt] = useState([])\r\n    // const [selectedAns, setSelectedAns] = useState(\"\")\r\n    // const SetOption=(e)=>{\r\n    //     setSelectedAns(e.target.value)\r\n    // }\r\n\r\n    useEffect(()=>{\r\n        // if(!sel)\r\n       setAllOpt([currQuestion.a,currQuestion.b,currQuestion.c,currQuestion.d])\r\n     },[currQuestion]);\r\n\r\n    const prevClickHandler = ()=>{\r\n        if(currQuestion.id >1){\r\n            \r\n            setCurrentQuestion(questionsArr[currQuestion.id -2])\r\n        }\r\n        \r\n    }\r\n    const nextClickHandler = ()=>{\r\n        if(currQuestion.id < questionsArr.length){\r\n            // alert(JSON.stringify(questionsArr[currQuestion.id]) )\r\n        setCurrentQuestion(questionsArr[currQuestion.id ])\r\n        }\r\n    }\r\n    //alert( currQuestion.question)\r\n    // alert(selectedAnsArr)\r\n   \r\n    return (\r\n        \r\n        \r\n       \r\n        <div className=\"card my-5 \" style={{borderRadius:\"20px\"}}>\r\n                <div className=\"card-body\">\r\n                   \r\n                    <h5 className=\"card-title\">{currQuestion.id}) Question :  {currQuestion.question}</h5>\r\n                    <div className=\"card-text\">\r\n                     <AllOptions \r\n                      selectedAnsArr={selectedAnsArr}\r\n                      setSelectedAnsArr={setSelectedAnsArr}\r\n                     currQuestion={currQuestion} />\r\n\r\n                        <div className=\"container\">\r\n                            <a onClick={prevClickHandler} style={{marginBottom:\"2%\"}} className=\"btn btn-primary mx-3\">prev</a>\r\n                            <a onClick={nextClickHandler} style={{marginBottom:\"2%\"}} className=\"btn btn-primary mx-3\">next</a>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        \r\n    )\r\n}\r\n\r\nexport default QuestionBox\r\n","F:\\FullStack\\React\\ReactProject\\KAPS\\online-examination-system\\src\\components\\pages\\Student\\fire.js",["183","184","185"],"import React from 'react'\r\nimport './fire.css'\r\n\r\nfunction fire() {\r\n\r\nlet canvas, width, height, ctx;\r\nlet fireworks = [];\r\nlet particles = [];\r\n\r\nfunction setup() {\r\n\tcanvas = document.getElementById(\"canvas\");\r\n\tsetSize(canvas);\r\n\tctx = canvas.getContext(\"2d\");\r\n\tctx.fillStyle = \"#000000\";\r\n\tctx.fillRect(0, 0, width, height);\r\n\tfireworks.push(new Firework(Math.random()*(width-200)+100));\r\n\twindow.addEventListener(\"resize\",windowResized);\r\n\tdocument.addEventListener(\"click\",onClick);\r\n}\r\n\r\nsetTimeout(setup,0.5);\r\n\r\nfunction loop(){\r\n\tctx.globalAlpha = 0.1;\r\n\tctx.fillStyle = \"#000000\";\r\n\tctx.fillRect(0, 0, width, height);\r\n\tctx.globalAlpha = 1;\r\n\r\n\tfor(let i=0; i<fireworks.length; i++){\r\n\t\tlet done = fireworks[i].update();\r\n\t\tfireworks[i].draw();\r\n\t\tif(done) fireworks.splice(i, 1);\r\n\t}\r\n\r\n\tfor(let i=0; i<particles.length; i++){\r\n\t\tparticles[i].update();\r\n\t\tparticles[i].draw();\r\n\t\tif(particles[i].lifetime>80) particles.splice(i,1);\r\n\t}\r\n\r\n\tif(Math.random()<1/60) fireworks.push(new Firework(Math.random()*(width-200)+100));\r\n}\r\nsetInterval(loop, 1/60);\r\n//setInterval(loop, 100/60);\r\nclass Particle{\r\n\tconstructor(x, y, col){\r\n\t\tthis.x = x;\r\n\t\tthis.y = y;\r\n\t\tthis.col = col;\r\n\t\tthis.vel = randomVec(2);\r\n\t\tthis.lifetime = 0;\r\n\t}\r\n\r\n\tupdate(){\r\n\t\tthis.x += this.vel.x;\r\n\t\tthis.y += this.vel.y;\r\n\t\tthis.vel.y += 0.02;\r\n\t\tthis.vel.x *= 0.99;\r\n\t\tthis.vel.y *= 0.99;\r\n\t\tthis.lifetime++;\r\n\t}\r\n\r\n\tdraw(){\r\n\t\tctx.globalAlpha = Math.max(1-this.lifetime/80, 0);\r\n\t\tctx.fillStyle = this.col;\r\n\t\tctx.fillRect(this.x, this.y, 2, 2);\r\n\t}\r\n}\r\n\r\nclass Firework{\r\n\tconstructor(x){\r\n\t\tthis.x = x;\r\n\t\tthis.y = height;\r\n\t\tthis.isBlown = false;\r\n\t\tthis.col = randomCol();\r\n\t}\r\n\r\n\tupdate(){\r\n\t\tthis.y -= 3;\r\n\t\tif(this.y < 350-Math.sqrt(Math.random()*500)*40){\r\n\t\t\tthis.isBlown = true;\r\n\t\t\tfor(let i=0; i<60; i++){\r\n\t\t\t\tparticles.push(new Particle(this.x, this.y, this.col))\r\n\t\t\t}\r\n\t\t}\r\n\t\treturn this.isBlown;\r\n\t}\r\n\r\n\tdraw(){\r\n\t\tctx.globalAlpha = 1;\r\n\t\tctx.fillStyle = this.col;\r\n\t\tctx.fillRect(this.x, this.y, 2, 2);\r\n\t}\r\n}\r\n\r\nfunction randomCol(){\r\n\tvar letter = '0123456789ABCDEF';\r\n\tvar nums = [];\r\n\r\n\tfor(var i=0; i<3; i++){\r\n\t\tnums[i] = Math.floor(Math.random()*256);\r\n\t}\r\n\r\n\tlet brightest = 0;\r\n\tfor(var i=0; i<3; i++){\r\n\t\tif(brightest<nums[i]) brightest = nums[i];\r\n\t}\r\n\r\n\tbrightest /=255;\r\n\tfor(var i=0; i<3; i++){\r\n\t\tnums[i] /= brightest;\r\n\t}\r\n\r\n\tlet color = \"#\";\r\n\tfor(var i=0; i<3; i++){\r\n\t\tcolor += letter[Math.floor(nums[i]/16)];\r\n\t\tcolor += letter[Math.floor(nums[i]%16)];\r\n\t}\r\n\treturn color;\r\n}\r\n\r\nfunction randomVec(max){\r\n\tlet dir = Math.random()*Math.PI*2;\r\n\tlet spd = Math.random()*max;\r\n\treturn{x: Math.cos(dir)*spd, y: Math.sin(dir)*spd};\r\n}\r\n\r\nfunction setSize(canv){\r\n\t\r\n\twidth = window.innerWidth;\r\n\theight = window.innerHeight;\r\n\r\n\tcanv.width = width*window.devicePixelRatio;\r\n\tcanv.height = height*window.devicePixelRatio;\r\n\tcanvas.getContext(\"2d\").scale(window.devicePixelRatio, window.devicePixelRatio);\r\n}\r\n\r\nfunction onClick(e){\r\n\tfireworks.push(new Firework(e.clientX));\r\n}\r\n\r\nfunction windowResized(){\r\n\tsetSize(canvas);\r\n\tctx.fillStyle = \"#000000\";\r\n\tctx.fillRect(0, 0, width, height);\r\n}\r\n\r\n\treturn (\r\n\t\t<div>\r\n\t\t\t<canvas id=\"canvas\"></canvas>\r\n\t\t</div>\r\n\t)\r\n}\r\n\r\nexport default fire\r\n\r\n\r\n","F:\\FullStack\\React\\ReactProject\\KAPS\\online-examination-system\\src\\components\\pages\\Student\\AllOptions.js",["186","187","188","189","190","191","192"],"import React, { useEffect, useState } from 'react'\r\n\r\nfunction AllOptions({currQuestion,selectedAnsArr,setSelectedAnsArr}) {\r\n    const[sel,setSel]=useState(false)\r\n    const [allOpt,setAllOpt] = useState([currQuestion.a,currQuestion.b,currQuestion.c,currQuestion.d])\r\n\r\n    useEffect(()=>{\r\n        if(!sel)\r\n       setAllOpt([currQuestion.a,currQuestion.b,currQuestion.c,currQuestion.d])\r\n     },[currQuestion]);\r\n    return (\r\n        <div >\r\n            <ol type=\"A\">\r\n                <li>\r\n                    <input style={{border:\"1px solid grey\",marginBottom:\"2%\"}} className=\"btn btn-alert\" type=\"button\" name=\"a\" id=\"q1A\"\r\n                    value={currQuestion.a} onClick={(e)=>{\r\n                       \r\n                        //alert(\"selected opt is \"+e.target.name)\r\n                        if(e.target.name ==currQuestion.ans){\r\n                            \r\n                            let arr = [...selectedAnsArr]\r\n                            arr[currQuestion.id-1]=1\r\n                            // alert(\"selecte ans array is\",selectedAnsArr)\r\n                            setSelectedAnsArr(arr)\r\n                        }\r\n                        else{\r\n                            let arr = [...selectedAnsArr]\r\n                            arr[currQuestion.id-1]=0\r\n                            // alert(\"selecte ans array is\",selectedAnsArr)\r\n                            setSelectedAnsArr(arr)\r\n\r\n                        }\r\n                        // setSel(true)\r\n                    }} />\r\n                    \r\n                </li>\r\n\r\n                <li>\r\n                    <input style={{border:\"1px solid grey\",marginBottom:\"2%\"}} className=\"btn btn-alert\" type=\"button\" name=\"b\" id=\"q1A\"\r\n                    value={currQuestion.b} onClick={(e)=>{\r\n                       \r\n                       // alert(\"selected opt is \"+e.target.name)\r\n                        if(e.target.name ==currQuestion.ans){\r\n                            \r\n                            let arr = [...selectedAnsArr]\r\n                            arr[currQuestion.id-1]=1\r\n                            // alert(\"selecte ans array is\",selectedAnsArr)\r\n                            setSelectedAnsArr(arr)\r\n                        }\r\n                        else{\r\n                            let arr = [...selectedAnsArr]\r\n                            arr[currQuestion.id-1]=0\r\n                            // alert(\"selecte ans array is\",selectedAnsArr)\r\n                            setSelectedAnsArr(arr)\r\n\r\n                        }\r\n                        // setSel(true)\r\n                    }} />\r\n                    \r\n                </li>\r\n\r\n                <li>\r\n                    <input style={{border:\"1px solid grey\",marginBottom:\"2%\"}} className=\"btn btn-alert\" type=\"button\" name=\"c\" id=\"q1A\"\r\n                    value={currQuestion.c} onClick={(e)=>{\r\n                       \r\n                       // alert(\"selected opt is \"+e.target.name)\r\n                        if(e.target.name ==currQuestion.ans){\r\n                            \r\n                            let arr = [...selectedAnsArr]\r\n                            arr[currQuestion.id-1]=1\r\n                            // alert(\"selecte ans array is\",selectedAnsArr)\r\n                            setSelectedAnsArr(arr)\r\n                        }\r\n                        else{\r\n                            let arr = [...selectedAnsArr]\r\n                            arr[currQuestion.id-1]=0\r\n                            // alert(\"selecte ans array is\",selectedAnsArr)\r\n                            setSelectedAnsArr(arr)\r\n\r\n                        }\r\n                        // setSel(true)\r\n                    }} />\r\n                    \r\n                </li>\r\n\r\n                <li>\r\n                    <input style={{border:\"1px solid grey\",marginBottom:\"2%\"}} className=\"btn btn-alert\" type=\"button\" name=\"d\" id=\"q1A\"\r\n                    value={currQuestion.d} onClick={(e)=>{\r\n                       \r\n                       // alert(\"selected opt is \"+e.target.name)\r\n                        if(e.target.name ==currQuestion.ans){\r\n                            \r\n                            let arr = [...selectedAnsArr]\r\n                            arr[currQuestion.id-1]=1\r\n                            // alert(\"selecte ans array is\",selectedAnsArr)\r\n                            setSelectedAnsArr(arr)\r\n                        }\r\n                        else{\r\n                            let arr = [...selectedAnsArr]\r\n                            arr[currQuestion.id-1]=0\r\n                            // alert(\"selecte ans array is\",selectedAnsArr)\r\n                            setSelectedAnsArr(arr)\r\n\r\n                        }\r\n                        // setSel(true)\r\n                    }} />\r\n                    \r\n                </li>\r\n            </ol>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default AllOptions\r\n",{"ruleId":"193","replacedBy":"194"},{"ruleId":"195","replacedBy":"196"},{"ruleId":"197","severity":1,"message":"198","line":1,"column":24,"nodeType":"199","messageId":"200","endLine":1,"endColumn":33},{"ruleId":"201","severity":1,"message":"202","line":53,"column":17,"nodeType":"203","endLine":53,"endColumn":157},{"ruleId":"204","severity":1,"message":"205","line":24,"column":21,"nodeType":"206","messageId":"207","endLine":24,"endColumn":23},{"ruleId":"204","severity":1,"message":"205","line":29,"column":21,"nodeType":"206","messageId":"207","endLine":29,"endColumn":23},{"ruleId":"204","severity":1,"message":"208","line":34,"column":58,"nodeType":"206","messageId":"207","endLine":34,"endColumn":60},{"ruleId":"209","severity":1,"message":"210","line":149,"column":65,"nodeType":"211","endLine":149,"endColumn":84},{"ruleId":"212","severity":1,"message":"213","line":151,"column":49,"nodeType":"203","endLine":152,"endColumn":196},{"ruleId":"214","severity":1,"message":"215","line":151,"column":329,"nodeType":"211","endLine":151,"endColumn":346},{"ruleId":"209","severity":1,"message":"210","line":152,"column":53,"nodeType":"211","endLine":152,"endColumn":64},{"ruleId":"209","severity":1,"message":"210","line":152,"column":65,"nodeType":"211","endLine":152,"endColumn":77},{"ruleId":"209","severity":1,"message":"210","line":152,"column":94,"nodeType":"211","endLine":152,"endColumn":131},{"ruleId":"197","severity":1,"message":"216","line":2,"column":9,"nodeType":"199","messageId":"200","endLine":2,"endColumn":18},{"ruleId":"197","severity":1,"message":"217","line":3,"column":9,"nodeType":"199","messageId":"200","endLine":3,"endColumn":21},{"ruleId":"197","severity":1,"message":"218","line":4,"column":9,"nodeType":"199","messageId":"200","endLine":4,"endColumn":23},{"ruleId":"197","severity":1,"message":"219","line":5,"column":9,"nodeType":"199","messageId":"200","endLine":5,"endColumn":20},{"ruleId":"197","severity":1,"message":"220","line":6,"column":9,"nodeType":"199","messageId":"200","endLine":6,"endColumn":22},{"ruleId":"197","severity":1,"message":"221","line":7,"column":9,"nodeType":"199","messageId":"200","endLine":7,"endColumn":22},{"ruleId":"197","severity":1,"message":"222","line":8,"column":9,"nodeType":"199","messageId":"200","endLine":8,"endColumn":16},{"ruleId":"197","severity":1,"message":"223","line":3,"column":16,"nodeType":"199","messageId":"200","endLine":3,"endColumn":23},{"ruleId":"204","severity":1,"message":"205","line":52,"column":21,"nodeType":"206","messageId":"207","endLine":52,"endColumn":23},{"ruleId":"197","severity":1,"message":"224","line":11,"column":12,"nodeType":"199","messageId":"200","endLine":11,"endColumn":18},{"ruleId":"197","severity":1,"message":"225","line":30,"column":14,"nodeType":"199","messageId":"200","endLine":30,"endColumn":28},{"ruleId":"197","severity":1,"message":"226","line":61,"column":11,"nodeType":"199","messageId":"200","endLine":61,"endColumn":17},{"ruleId":"197","severity":1,"message":"223","line":3,"column":16,"nodeType":"199","messageId":"200","endLine":3,"endColumn":23},{"ruleId":"197","severity":1,"message":"227","line":3,"column":8,"nodeType":"199","messageId":"200","endLine":3,"endColumn":9},{"ruleId":"197","severity":1,"message":"223","line":2,"column":10,"nodeType":"199","messageId":"200","endLine":2,"endColumn":17},{"ruleId":"197","severity":1,"message":"228","line":4,"column":8,"nodeType":"199","messageId":"200","endLine":4,"endColumn":12},{"ruleId":"197","severity":1,"message":"229","line":5,"column":10,"nodeType":"199","messageId":"200","endLine":5,"endColumn":14},{"ruleId":"230","severity":1,"message":"231","line":43,"column":16,"nodeType":"232","endLine":48,"endColumn":7},{"ruleId":"230","severity":1,"message":"233","line":48,"column":8,"nodeType":"234","endLine":48,"endColumn":19,"suggestions":"235"},{"ruleId":"197","severity":1,"message":"223","line":3,"column":16,"nodeType":"199","messageId":"200","endLine":3,"endColumn":23},{"ruleId":"204","severity":1,"message":"205","line":50,"column":21,"nodeType":"206","messageId":"207","endLine":50,"endColumn":23},{"ruleId":"197","severity":1,"message":"236","line":3,"column":9,"nodeType":"199","messageId":"200","endLine":3,"endColumn":14},{"ruleId":"197","severity":1,"message":"237","line":3,"column":34,"nodeType":"199","messageId":"200","endLine":3,"endColumn":40},{"ruleId":"197","severity":1,"message":"238","line":3,"column":42,"nodeType":"199","messageId":"200","endLine":3,"endColumn":48},{"ruleId":"197","severity":1,"message":"239","line":3,"column":50,"nodeType":"199","messageId":"200","endLine":3,"endColumn":58},{"ruleId":"197","severity":1,"message":"240","line":39,"column":11,"nodeType":"199","messageId":"200","endLine":39,"endColumn":24},{"ruleId":"201","severity":1,"message":"241","line":101,"column":26,"nodeType":"203","endLine":112,"endColumn":29},{"ruleId":"197","severity":1,"message":"242","line":7,"column":12,"nodeType":"199","messageId":"200","endLine":7,"endColumn":18},{"ruleId":"201","severity":1,"message":"241","line":49,"column":29,"nodeType":"203","endLine":49,"endColumn":120},{"ruleId":"201","severity":1,"message":"241","line":50,"column":29,"nodeType":"203","endLine":50,"endColumn":120},{"ruleId":"243","severity":1,"message":"244","line":105,"column":10,"nodeType":"199","messageId":"245","endLine":105,"endColumn":11},{"ruleId":"243","severity":1,"message":"244","line":110,"column":10,"nodeType":"199","messageId":"245","endLine":110,"endColumn":11},{"ruleId":"243","severity":1,"message":"244","line":115,"column":10,"nodeType":"199","messageId":"245","endLine":115,"endColumn":11},{"ruleId":"197","severity":1,"message":"246","line":4,"column":15,"nodeType":"199","messageId":"200","endLine":4,"endColumn":21},{"ruleId":"197","severity":1,"message":"242","line":5,"column":12,"nodeType":"199","messageId":"200","endLine":5,"endColumn":18},{"ruleId":"230","severity":1,"message":"247","line":10,"column":8,"nodeType":"234","endLine":10,"endColumn":22,"suggestions":"248"},{"ruleId":"204","severity":1,"message":"205","line":19,"column":42,"nodeType":"206","messageId":"207","endLine":19,"endColumn":44},{"ruleId":"204","severity":1,"message":"205","line":43,"column":42,"nodeType":"206","messageId":"207","endLine":43,"endColumn":44},{"ruleId":"204","severity":1,"message":"205","line":67,"column":42,"nodeType":"206","messageId":"207","endLine":67,"endColumn":44},{"ruleId":"204","severity":1,"message":"205","line":91,"column":42,"nodeType":"206","messageId":"207","endLine":91,"endColumn":44},"no-native-reassign",["249"],"no-negated-in-lhs",["250"],"no-unused-vars","'useEffect' is defined but never used.","Identifier","unusedVar","jsx-a11y/anchor-is-valid","The href attribute requires a valid value to be accessible. Provide a valid, navigable address as the href value. If you cannot provide a valid href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","JSXOpeningElement","eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","Expected '!==' and instead saw '!='.","react/jsx-no-duplicate-props","No duplicate props allowed","JSXAttribute","jsx-a11y/iframe-has-title","<iframe> elements must have a unique title property.","react/style-prop-object","Style prop value must be an object","'MdSubject' is defined but never used.","'AiFillCamera' is defined but never used.","'MdLibraryBooks' is defined but never used.","'IoMdOptions' is defined but never used.","'MdFingerprint' is defined but never used.","'FaCertificate' is defined but never used.","'GoGraph' is defined but never used.","'NavLink' is defined but never used.","'Userid' is assigned a value but never used.","'setModalvalues' is defined but never used.","'result' is assigned a value but never used.","'$' is defined but never used.","'uuid' is defined but never used.","'Link' is defined but never used.","react-hooks/exhaustive-deps","Effect callbacks are synchronous to prevent race conditions. Put the async function inside:\n\nuseEffect(() => {\n  async function fetchData() {\n    // You can await here\n    const response = await MyAPI.getData(someId);\n    // ...\n  }\n  fetchData();\n}, [someId]); // Or [] if effect doesn't need props or state\n\nLearn more about data fetching with Hooks: https://reactjs.org/link/hooks-data-fetching","ArrowFunctionExpression","React Hook useEffect has a missing dependency: 'currSubId'. Either include it or remove the dependency array.","ArrayExpression",["251"],"'Route' is defined but never used.","'Router' is defined but never used.","'Switch' is defined but never used.","'Redirect' is defined but never used.","'collectAllAns' is assigned a value but never used.","The href attribute is required for an anchor to be keyboard accessible. Provide a valid, navigable address as the href value. If you cannot provide an href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","'allOpt' is assigned a value but never used.","no-redeclare","'i' is already defined.","redeclared","'setSel' is assigned a value but never used.","React Hook useEffect has a missing dependency: 'sel'. Either include it or remove the dependency array.",["252"],"no-global-assign","no-unsafe-negation",{"desc":"253","fix":"254"},{"desc":"255","fix":"256"},"Update the dependencies array to be: [Questions, currSubId]",{"range":"257","text":"258"},"Update the dependencies array to be: [currQuestion, sel]",{"range":"259","text":"260"},[1370,1381],"[Questions, currSubId]",[398,412],"[currQuestion, sel]"]